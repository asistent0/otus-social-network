services:
  # PHP-FPM
  php:
    build:
      context: .
      dockerfile: Dockerfile
      target: backend
    container_name: social_network_php
    ports:
      - "9000:9000"
    volumes:
      - .:/var/www
    depends_on:
      - citus-coordinator
      - redis
      - rabbitmq

  # Nginx
  nginx:
    image: nginx:latest
    container_name: social_network_nginx
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - .:/var/www
    depends_on:
      - php

  # Redis
  redis:
    image: redis:latest
    container_name: social_network_redis
    volumes:
      - ./docker/redis/data:/data
    ports:
      - "6379:6379"

  supervisord:
    build:
      context: .
      dockerfile: Dockerfile
      target: supervisord
    container_name: social_network_supervisord
    user: www-data:www-data
    volumes:
      - .:/var/www
    depends_on:
      - citus-coordinator
      - redis
      - rabbitmq

  rabbitmq:
    image: rabbitmq:3.10.5-management
    container_name: social_network_rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=$RABBITMQ_USER
      - RABBITMQ_DEFAULT_PASS=$RABBITMQ_PASS

  ###> symfony/mercure-bundle ###
  mercure:
    image: dunglas/mercure
    container_name: social_network_mercure
    restart: unless-stopped
    environment:
      # Uncomment the following line to disable HTTPS,
      SERVER_NAME: ':80'
      MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_JWT_SECRET}
      MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_JWT_SECRET}
      # Set the URL of your Symfony project (without trailing slash!) as value of the cors_origins directive
      MERCURE_EXTRA_DIRECTIVES: |
        cors_origins *
        anonymous
    # Comment the following line to disable the development mode
    command: /usr/bin/caddy run --config /etc/caddy/Caddyfile --adapter caddyfile
    ports:
      - "3000:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/healthz"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - ./docker/mercure/Caddyfile:/etc/caddy/Caddyfile
      - mercure_data:/data
      - mercure_config:/config
  ###< symfony/mercure-bundle ###

  # Citus Coordinator
  citus-coordinator:
    image: citusdata/citus:13-pg16
    container_name: social_network_citus_coordinator
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
      citus.use_secondary_nodes: always
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./docker/citus/coordinator:/var/lib/postgresql/data
    ports:
      - "5434:5432"

  # Citus Worker 1
  citus-worker1:
    image: citusdata/citus:13-pg16
    container_name: social_network_citus_worker1
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
    volumes:
      - ./docker/citus/worker1:/var/lib/postgresql/data
    ports:
      - "5435:5432"
    depends_on:
      - citus-coordinator

  # Citus Worker 2
  citus-worker2:
    image: citusdata/citus:13-pg16
    container_name: social_network_citus_worker2
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
    volumes:
      - ./docker/citus/worker2:/var/lib/postgresql/data
    ports:
      - "5436:5432"
    depends_on:
      - citus-coordinator

volumes:
###> symfony/mercure-bundle ###
  mercure_data:
  mercure_config:
###< symfony/mercure-bundle ###
